# test_parser.py
import requests
from bs4 import BeautifulSoup
from datetime import datetime, timedelta
import time

def parse_results_for_date(date_str):
    """
    –ü–∞—Ä—Å–∏—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –º–∞—Ç—á–µ–π –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –¥–∞—Ç—É.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.
    """
    url = f"https://scores24.live/ru/soccer/{date_str}"
    print(f"üï∏Ô∏è  –ü–∞—Ä—Å–∏–º URL: {url}")
    
    try:
        response = requests.get(url, headers={
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
        })
        response.raise_for_status()
    except requests.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ {url}: {e}")
        return []
    
    soup = BeautifulSoup(response.text, 'html.parser')
    results = []
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    with open(f"debug_{date_str}.html", "w", encoding="utf-8") as f:
        f.write(soup.prettify())
    print(f"‚úÖ HTML —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ debug_{date_str}.html")
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–∞—Ç—á–µ–π
    selectors = [
        'div.sm', 'div.event', 'div.match', 'div.game', 
        'div[class*="match"]', 'div[class*="event"]',
        'tr', 'table tbody tr'
    ]
    
    for selector in selectors:
        match_containers = soup.select(selector)
        print(f"üîç –°–µ–ª–µ–∫—Ç–æ—Ä '{selector}': –Ω–∞–π–¥–µ–Ω–æ {len(match_containers)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
        
        if match_containers:
            # –ü–æ—Å–º–æ—Ç—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
            print(f"üìã –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ ({selector}):")
            print(str(match_containers[0])[:200] + "..." if len(str(match_containers[0])) > 200 else str(match_containers[0]))
            break
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –∫–ª–∞—Å—Å–∞–º
    print("\nüîç –ü–æ–∏—Å–∫ –ø–æ –∫–ª–∞—Å—Å–∞–º:")
    for class_name in ['sm', 'event', 'match', 'game', 'row', 'item']:
        elements = soup.find_all(class_=class_name)
        if elements:
            print(f"–ö–ª–∞—Å—Å '{class_name}': {len(elements)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
            if len(elements) > 0:
                print(f"–ü—Ä–∏–º–µ—Ä: {str(elements[0])[:100]}...")
    
    # –ü–æ–∏—Å–∫ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
    tables = soup.find_all('table')
    print(f"\nüìä –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
    for i, table in enumerate(tables[:3]):
        print(f"–¢–∞–±–ª–∏—Ü–∞ {i+1}:")
        print(str(table)[:200] + "..." if len(str(table)) > 200 else str(table))
    
    return results

def main():
    print("üß™ –¢–ï–°–¢–ò–†–£–ï–ú –ü–ê–†–°–ï–† –ù–ê –†–ï–ê–õ–¨–ù–´–• –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ –≤—á–µ—Ä–∞—à–Ω–µ–π –¥–∞—Ç–µ
    yesterday = (datetime.now() - timedelta(days=1)).strftime("%Y-%m-%d")
    print(f"üìÖ –¢–µ—Å—Ç–æ–≤–∞—è –¥–∞—Ç–∞: {yesterday}")
    
    results = parse_results_for_date(yesterday)
    print(f"\nüìä –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(results)}")
    
    print("\nüîç –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª debug_*.html –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã")
    print("2. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –∫–ª–∞—Å—Å—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –º–∞—Ç—á–∞–º–∏")
    print("3. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ CSS-—Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞")
    
    # –¢–∞–∫–∂–µ –ø—Ä–æ–±—É–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É
    today = datetime.now().strftime("%Y-%m-%d")
    print(f"\nüìÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: —Å–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞ {today}")
    parse_results_for_date(today)
    
    print("\nüîö –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –ò–∑—É—á–∏—Ç–µ debug-—Ñ–∞–π–ª—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤.")

if __name__ == '__main__':
    main()
